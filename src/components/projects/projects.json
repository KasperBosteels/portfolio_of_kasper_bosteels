[
    {
        "id":"Slimmii",
        "title":"Slimmii remote energy monitoring",
        "tags":["html","css","MaterialUI","express","react","typescript","Typeorm","Entity Framework","node"],
        "description":"Dit project maakte deel uit van mijn opleiding en heb ik in een team voltooid. Het betreft een webapplicatie waarmee de gebruiker op afstand zijn energieverbruik kan monitoren. De gebruiker kan zijn verbruik bekijken door in te loggen op de webapplicatie. Mijn verantwoordelijkheden binnen het project waren in de eerste helft het ontwerpen en bouwen van de backend en de database, samen met de bijbehorende functies. In de tweede helft van het project heb ik ook geholpen bij verdere ontwikkeling van de frontend.",
        "image":"",
        "extraImages":["Slimmii_EF.png"],
        "details":"Deze applicatie ontvangt gegevens van een microcontroller die is opgezet bij uw elektriciteitsmeter, die op bepaalde intervallen een afbeelding zal versturen ter verwerking. Deze afbeelding wordt vervolgens naar een Python-instantie gestuurd, die de gegevens uitleest vanuit de afbeelding. Die gegevens worden teruggestuurd en opgeslagen bij het account waartoe deze meter behoort. Dit geeft u de mogelijkheid om uw analoge meter in een digitale omgeving te volgen, vanaf elke locatie in uw huis. De applicatie gebruikt React voor de frontend en Express voor de backend, en beide kunnen worden gebouwd en gestart met NPM. De Express-backend maakt gebruik van TypeORM als Entity Framework om de entiteiten in de database te creëren. Ook maakt het gebruik van een getimed proces om bepaalde datapunten te comprimeren, om de database zo klein mogelijk te houden. De frontend maakt gebruik van MaterialUI als UI-framework en is gebouwd met React en TypeScript. Daarnaast maakt de frontend gebruik van een aangepaste hook om de API-oproepen naar de backend te beheren. De applicatie heeft ook de volgende extra functies: een ticketsysteem, een geautomatiseerd e-mailsysteem voor resetten, beheerderspanelen voor gebruikersmoderatie en -creatie, en de mogelijkheid om uw metingen te filteren op datum.",
        "link":"https://github.com/SlimmiiProject/UsageLogServer",
        "year":"2022-2023",
        "file":""
    },
    {
        "id":"theone",
        "title":"LOTR 'the One'quiz application",
        "tags":["html","css","javascript","react","typescript","node", "javascript", "ejs"],
        "description":"Dit project maakte deel uit van mijn opleiding en heb ik in een team voltooid. Deze applicatie bevat een quiz over de Lord of the Rings-films, met een accountsysteem en leaderboards.",
        "image":"theone_quiz_card.png",
        "extraImages":["theone_favorites.png","theone_quiz.png"],
        "details":"Onze groep heeft een webapplicatie gebouwd rond 'The One API', die gegevens levert van de 'The Lord of the Rings'-filmtrilogie. Het plan was om met Express, Node.js, MongoDB en Axios een applicatie te ontwikkelen met een quiz waarbij de gebruiker een reeks citaten kreeg en moest raden uit welke film en van welk personage deze afkomstig waren. Gedurende dit project is de scope verder uitgebreid naar gebruikersaccounts om voortgang en favorieten op te slaan, beveiliging, het ophalen van afbeeldingen van personages van de wiki door middel van een webscraper, een extra lijst voor personages en meer. Uiteraard waren de introductie van nieuwe technologieën noodzakelijk naarmate onze scope groeide.",
        "link":"github.com/GremlinsAP/TheOne",
        "year":"2021-2022",
        "file":""
    },
    {
        "id":"robonext",
        "title":"Robonext KPI dashboard",
        "tags":["html","css","typescript","react","C#","node.ts",".Net Core","Swagger","nunite","MaterialUI","Entity Framework","ASP","SqLite","UiPath","Identity","CORS","Hosted Service"],
        "description":"Een KPI-dashboard voor Robonext, een bedrijf dat ARPs ontwerpt voor hun klanten. Dit project maakt gebruik van ASP.NET Core als backend en React als frontend. Dit project was mijn voornaamste opdracht tijdens mijn stage bij Robonext.",
        "image":"Robonext_kpi.png",
        "extraImages":["Robonext_admin_panel.png","Robonext_robots_panel.png","Robonext_organization_panel.png","Robonext_robot_panel.png","Robonext_tenant_panel.png"],
        "details":"Voor dit project werd specifiek gevraagd om de backend in ASP.NET te ontwikkelen, met Entity Framework als ORM. Wat betreft de frontend had ik vrije keuze en koos ik ervoor om React te gebruiken. Voor de database werd verzocht om SQLite te gebruiken voor testdoeleinden. De backend maakt ook gebruik van het Identity-pakket, dat de authenticatie en autorisatie van de gebruikers beheert. Bovendien maakt de backend gebruik van een Hosted Service die periodiek een verzoek zal sturen naar de UiPath API om ervoor te zorgen dat de gegevens in de database actueel blijven. Voor de frontend wordt MaterialUI als UI-framework gebruikt, en Axios wordt ingezet om verzoeken naar de backend-server te sturen. De applicatie ondersteunt verschillende gebruikersniveaus, namelijk 'Robonext employee' (beheerder), 'Organization' (beheerder voor één organisatie), en 'Orchestrator' (het account dat alleen de KPI's weergeeft). Er wordt nog een extra niveau toegevoegd, genaamd 'Default administrator'. Dit account kan niet worden verwijderd en wordt automatisch aangemaakt bij het opzetten van de database.",
        "year":2023,
        "file":""
    },{
        "id":"discord bot",
        "title":"Discord bot",
        "tags":["javascript","node.js","discord.js","discord","mysql","typeorm"],
        "description":"A Discord bot die ik tijdens mijn opleiding heb gebouwd. Enkele features van de bot waren muziek spelen, een economy systeem, een level systeem, een ticket systeem en meer.",
        "year":"2019-2023",
        "file":"",
        "details":"Ik heb deze Discord-bot gebouwd om mezelf vertrouwder te maken met JavaScript, dat ik op dat moment aan het leren was. De bot maakte gebruik van een lokaal gehoste MySQL-database op een Raspberry Pi, waarmee het afspeellijsten kan opslaan en de economie van de bot kan bijhouden. De bot gebruikt ook een levelsysteem, waarbij gebruikers een level krijgen naarmate ze berichten sturen in de server. Daarnaast heeft de bot een muzieksysteem waarmee gebruikers muziek kunnen afspelen in een spraakkanaal. De volledige bot kan worden gehost op een kleine Raspberry Pi die ik thuis heb staan.",
        "link":"https://github.com/KasperBosteels/Little_Korean_Rice_Cooker"
    },
    {
        "id":"advent_of_code_2022",
        "title":"Advent of code 2022",
        "tags":[],
        "description":"Advent of Code is een jaarlijks terugkerend evenement waarbij er elke dag een nieuwe programmeeruitdaging wordt gegeven. Ik probeer elk jaar mee te doen; enkele van mijn oplossingen van het afgelopen jaar (2022) staan nu op GitHub. Ik probeer ook sommige uitdagingen in verschillende talen aan te pakken, zoals Python, JavaScript, C# en meer.",
        "image":"Advent_Of_Code_Logo.png",
        "year":"2022",
        "file":"",
        "link":"https://github.com/KasperBosteels/Advent-of-code-2022"
    }
]